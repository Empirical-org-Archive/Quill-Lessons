<script type="text/javascript">
  // declare and populate collections
  var chapterAssessments = new PG.Collections.ChapterAssessments;
  var chapterRules       = new PG.Collections.ChapterRules;
  var chapterLessons     = new PG.Collections.ChapterLessons;
  var chapterRule        = false;
  var chapterLesson      = false;
  chapterAssessments.add(<%= @assessment.to_json.html_safe %>);
  var chapterAssessment  = chapterAssessments.get(<%= @assessment.id.to_json.html_safe %>);

  <% @assessment.chunks.each_with_index do |chunk, i| %>
    <% if defined?(chunk.grammar) %>
      <% rule = Rule.find_by_id(chunk.grammar) %>
      <% next if rule.blank? %>
      chapterRules.add(<%= rule.to_json.html_safe %>);
      chapterRule = chapterRules.get(<%= rule.id %>);
      <% rule.questions.each do |lesson| %>
        chapterRule.lessons.add(<%= lesson.to_json.html_safe %>);
        chapterLesson = chapterRule.lessons.get(<%= lesson.id %>);
        <% lesson.answers.each_with_index do |chunk, i| %>
          chapterLesson.answers.add(<%= {text: chunk, id: i}.to_json.html_safe %>);
        <% end %> //added lesson answers to lesson model
        chapterLessons.add(chapterLesson);
      <% end %> //added lesson to rule model
    <% end %> //added rule to chapterassessment model's chunk
    chapterAssessment.chunks.add(<%= chunk.as_json.merge(id: i).to_json.gsub("\\u003C","<").gsub("\\u003E",">").html_safe %>);
  <% end %>

  window.ChapterAssessment = new PG.Views.ChapterAssessment({
    assessment: chapterAssessments.first(),
    rules: chapterRules,
    lessons: chapterLessons,
    el: $('.grammar-test')
  });
</script>
